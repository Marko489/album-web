CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ========================
-- Core Tables
-- ========================

-- Albums table (stores album credentials and metadata)
CREATE TABLE albums (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(64) UNIQUE NOT NULL CHECK (LENGTH(name) >= 3),
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  last_accessed_at TIMESTAMPTZ,
  access_count INTEGER DEFAULT 0,
  is_active BOOLEAN DEFAULT TRUE
);

-- Photos table (stores image metadata and Vercel Blob references)
CREATE TABLE photos (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  album_id UUID NOT NULL REFERENCES albums(id) ON DELETE CASCADE,
  blob_url VARCHAR(512) NOT NULL CHECK (blob_url LIKE 'https://%'),
  description TEXT,
  uploader_name VARCHAR(64),
  uploaded_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  view_count INTEGER DEFAULT 0 CHECK (view_count >= 0),
  display_order INTEGER DEFAULT 0,
  mime_type VARCHAR(32) NOT NULL DEFAULT 'image/jpeg'
);

-- ========================
-- Authentication
-- ========================

-- Sessions table (manages active logins)
CREATE TABLE sessions (
  session_token VARCHAR(64) PRIMARY KEY CHECK (LENGTH(session_token) = 64),
  album_id UUID NOT NULL REFERENCES albums(id) ON DELETE CASCADE,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  expires_at TIMESTAMPTZ NOT NULL DEFAULT (NOW() + INTERVAL '24 hours'),
  user_agent TEXT,
  ip_address INET
);

-- ========================
-- Security & Monitoring
-- ========================

-- Audit log table (tracks important actions)
CREATE TABLE audit_log (
  id BIGSERIAL PRIMARY KEY,
  album_id UUID REFERENCES albums(id) ON DELETE SET NULL,
  action_type VARCHAR(32) NOT NULL CHECK (
    action_type IN ('login', 'logout', 'upload', 'view', 'delete', 'password_change')
  ),
  performed_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  ip_address INET,
  user_agent TEXT,
  additional_info JSONB
);

-- ========================
-- Performance Indexes
-- ========================

-- Albums indexes
CREATE INDEX idx_albums_name ON albums(name);
CREATE INDEX idx_albums_active ON albums(is_active) WHERE is_active = TRUE;

-- Photos indexes
CREATE INDEX idx_photos_album ON photos(album_id);
CREATE INDEX idx_photos_order ON photos(album_id, display_order);

-- Sessions indexes
CREATE INDEX idx_sessions_album ON sessions(album_id);
CREATE INDEX idx_sessions_expiry ON sessions(expires_at);

-- Audit log indexes
CREATE INDEX idx_audit_album ON audit_log(album_id);
CREATE INDEX idx_audit_time ON audit_log(performed_at);

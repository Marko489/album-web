{"version":3,"file":"app/api/add_photo/route.js","mappings":"gJEAA,6QFIO,IAAMA,EAAU,OAEhB,eAAeC,EAAKC,CAAgB,EACzC,GAAI,CACF,IAAMC,EAAW,MAAMD,EAAQC,QAAQ,GACjCC,EAAWD,EAASE,GAAG,CAAC,YACxBC,EAAcH,EAASE,GAAG,CAAC,gBAAkB,GAC7CE,EAAOJ,EAASE,GAAG,CAAC,SAE1B,GAAI,CAACD,GAAgC,UAAU,OAAvBA,EACtB,OAAOI,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,MAAO,6BAA8B,EAAG,CAAEC,OAAQ,GAAI,GAEnF,GAAI,CAACJ,GAAQ,iBAAOA,GAAqB,CAAEA,CAAAA,aAAgBK,IAAAA,CAAG,CAC5D,EADgE,KACzDJ,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,MAAO,+BAAgC,EAAG,CAAEC,OAAQ,GAAI,GAIrF,IAAME,EAAW,GAAGC,KAAKC,GAAG,GAAG,CAAC,EAAE,EAAeC,IAAI,EAAI,SAAS,CAC5D,CAAEC,IAAKC,CAAQ,CAAE,CAAG,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,CAAGA,CAACN,EAAUN,EAAM,CAAEa,OAAQ,QAAS,GAGjEC,EAAY,MAAMC,EAAAA,CAAIA,CAACC,KAAK,CAChC,CAAC;;sHAE+G,CAAC,CACjH,CAACnB,EAAUc,EAAUZ,EAAcC,EAAciB,IAAI,EAAI,aAAa,EAGxE,OAAOhB,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEgB,MAAOJ,EAAUK,IAAI,CAAC,EAAE,EAAI,CAAEf,OAAQ,GAAI,EACvE,CAAE,MAAOD,EAAgB,CACvB,GAAIA,aAAiBiB,MACnB,CAD0B,MACnBnB,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,MAAOA,EAAMkB,OAAO,EAAI,qBAAsB,EAAG,CAAEjB,OAAQ,GAAI,GAE1F,OAAOH,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,MAAO,qBAAsB,EAAG,CAAEC,OAAQ,GAAI,EAE7E,CACF,CCjCA,UAAwB,qBAAmB,EAC3C,YACA,KAAc,GAAS,WACvB,4BACA,0BACA,iBACA,oCACA,CAAK,CACL,wGACA,iBAVA,GAWA,QAAY,EACZ,CAAC,EAID,kBAAQ,wCAAsD,EAC9D,aACA,MAAW,QAAW,EACtB,mBACA,sBACA,CAAK,CACL,CCpBA,qEACA,EAFA,4BAEA,2BACA,OACI,QAA8B,EAClC,4BACA,0BACA,wBACA,gBAAyB,OAAqB,EAC9C,uBACA,CAAS,CACT,CAAK,EAEE,MAAqB,EAC5B,EAAe,GAAsB,MAAM,EAAkB,CAC7D,QAD6D,GAf7D,CAAoB,MAAQ,OAcM,EAdN,aAA0B,sBAA2B,aAAe,kDAAyD,uOAAsQ,4UAAwW,kBAAkB,QAAQ,uEAAgF,gBAAkB,uBAAyB,kBAAoB,uCAA6C,MAAQ,iBAAmB,2BAA+B,gHAAkI,uBAAyB,8FAA0G,aAAiB,WAAa,sEAA6E,uBAAuB,iCAAmC,QAAQ,EAAE,SAAW,oBAAsB,QAAQ,GAAG,wFAA4F,6BAAoC,SAAW,2CAAiD,UAAY,+BAAqC,UAAY,oCAA0C,QAAU,uCAA6C,OAAS,yCAA+C,QAAU,0CAAiD,MAAQ,+CAAsD,iBAAmB,o/BAAqsC,qBAAyB,k/CAA2gD,wbAAqc,yDAiBnsK,CAAC,CAAC,EAAC,sBCvBH,wDCAA,oFCEA,IAmBA,EAnBMW,GAAWO,UAAAA,EAAIA,CAAC,CACpBC,WAkBaR,IAAIA,EAlBCS,QAAQC,GAAG,CAACC,YAAY,CAC1CC,KAAK,CACP","sources":["webpack://_N_E/./src/app/api/add_photo/route.ts","webpack://_N_E/./src/app/api/add_photo/route.ts?96ba","webpack://_N_E/?2073","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/./src/lib/db.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport pool from '@/lib/db';\r\nimport { put } from '@vercel/blob';\r\n\r\nexport const runtime = 'edge';\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const formData = await request.formData();\r\n    const album_id = formData.get('album_id');\r\n    const description = formData.get('description') || '';\r\n    const file = formData.get('photo');\r\n\r\n    if (!album_id || typeof album_id !== 'string') {\r\n      return NextResponse.json({ error: 'Missing or invalid album_id' }, { status: 400 });\r\n    }\r\n    if (!file || typeof file !== 'object' || !(file instanceof Blob)) {\r\n      return NextResponse.json({ error: 'Missing or invalid photo file' }, { status: 400 });\r\n    }\r\n\r\n    // Upload to Vercel Blob\r\n    const filename = `${Date.now()}-${(file as File).name || 'photo'}`;\r\n    const { url: blob_url } = await put(filename, file, { access: 'public' });\r\n\r\n    // Insert into DB\r\n    const insertRes = await pool.query(\r\n      `INSERT INTO photos (album_id, blob_url, description, mime_type)\r\n       VALUES ($1, $2, $3, $4)\r\n       RETURNING id, album_id, blob_url, description, mime_type, uploaded_at, display_order, uploader_name, view_count`,\r\n      [album_id, blob_url, description, (file as File).type || 'image/jpeg']\r\n    );\r\n\r\n    return NextResponse.json({ photo: insertRes.rows[0] }, { status: 201 });\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      return NextResponse.json({ error: error.message || 'Failed to add photo' }, { status: 500 });\r\n    } else {\r\n      return NextResponse.json({ error: 'Failed to add photo' }, { status: 500 });\r\n    }\r\n  }\r\n}\r\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"C:\\\\Users\\\\marek_o\\\\OneDrive\\\\Desktop\\\\album-web\\\\src\\\\app\\\\api\\\\add_photo\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/add_photo/route\",\n        pathname: \"/api/add_photo\",\n        filename: \"route\",\n        bundlePath: \"app/api/add_photo/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\marek_o\\\\OneDrive\\\\Desktop\\\\album-web\\\\src\\\\app\\\\api\\\\add_photo\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fadd_photo%2Froute&page=%2Fapi%2Fadd_photo%2Froute&pagePath=private-next-app-dir%2Fapi%2Fadd_photo%2Froute.ts&appDir=C%3A%5CUsers%5Cmarek_o%5COneDrive%5CDesktop%5Calbum-web%5Csrc%5Capp&appPaths=%2Fapi%2Fadd_photo%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/add_photo/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[\"1xiyujudsg1nyxmt.public.blob.vercel-storage.com\"],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"C:\\\\Users\\\\marek_o\\\\OneDrive\\\\Desktop\\\\album-web\",\"experimental\":{\"nodeMiddleware\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":7,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"viewTransition\":false,\"routerBFCache\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"useCache\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"C:\\\\Users\\\\marek_o\\\\OneDrive\\\\Desktop\\\\album-web\\\\next.config.ts\",\"configFileName\":\"next.config.ts\",\"turbopack\":{\"root\":\"C:\\\\Users\\\\marek_o\\\\OneDrive\\\\Desktop\\\\album-web\"}}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/add_photo/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/add_photo/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");","import { Pool } from '@neondatabase/serverless';\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n  ssl: true\r\n});\r\n\r\n// For API routes\r\nexport async function sql(strings: TemplateStringsArray, ...values: unknown[]) {\r\n  const client = await pool.connect();\r\n  try {\r\n    return await client.query({\r\n      text: strings.join('?'),\r\n      values\r\n    });\r\n  } finally {\r\n    client.release();\r\n  }\r\n}\r\n\r\n// For Server Components\r\nexport default pool;"],"names":["runtime","POST","request","formData","album_id","get","description","file","NextResponse","json","error","status","Blob","filename","Date","now","name","url","blob_url","put","access","insertRes","pool","query","type","photo","rows","Error","message","Pool","connectionString","process","env","DATABASE_URL","ssl"],"sourceRoot":"","ignoreList":[]}